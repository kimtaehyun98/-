/*데이터 캡슐화와 데이터 추상화
  1.데이터 캡슐화 - 정보 은닉이라고도 하며 정의는 외부 세계로부터 테이타 객체의 자세한 구현을 감추는 것
    예로 class 생성시 private(전용) 멤버 함수로 선언 함으로써 class 외부에서 접근이 불가능 하게 함.
  2.데이터 추상화 - 정의는 명세와 구현을 분리하는 것이다 
    예로 class 생성시 멤버함수를 선언만 해주고 구현은 class 외부에서 해주는 것이 이에 해당한다.
  3. static 과 extern - 먼저 file_A.c 와 file_B.c가 있다고 하자. 이때 file_A에서 전역 변수를 선언하고, file_B에서 사용하고 싶을 때
    그 전역변수를 file_B에서 extern 으로 선언하면 된다. 둘째로 file_A와 B에 같은 이름의 전역변수를 선언하고 컴파일 하고 싶을 때 
    각 파일의 전역변수에 static으로 전역변수를 선언해 주면 된다.
  4. exception handling(에외 처리) - try -> throw -> catch 구조로 이루어져 있으며 try문 내에서 어떠한 예외 발생시, throw문을 실행하고
    throw문 실행 시 그 즉시 가장 가까운 catch문(하나의 catch문만 가지고 있을 경우)으로 가서 catch문을 실행한다*/
